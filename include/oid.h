/** oid.h -- header file for object identifiers */
#ifndef OID_H
#define OID_H

#include <stdio.h>
#include <stdint.h>

enum OID_TYPE {
	OID_TYPE_ISO = 0,
	OID_TYPE_EC_PUBLIC_KEY,
	OID_TYPE_SPCEP256R1,
	OID_TYPE_ECDSA_WITH_SHA256,
	OID_TYPE_RSA,
	OID_TYPE_RSA_ENCRYPTION,
	OID_TYPE_SHA1_WITH_RSA_ENCRYPTION,
	OID_TYPE_CONTENT_HINT,

	/* RFC 5652 CMS/PkCS #7 */
	OID_TYPE_ID_DATA,
	OID_TYPE_ID_SIGNED_DATA,
	OID_TYPE_ID_CONTENT_TYPE,
	OID_TYPE_ID_MESSAGE_DIGEST,
	OID_TYPE_ID_SIGNING_TIME,
	OID_TYPE_ID_COUNTER_SIGNATURE,

	OID_TYPE_SMIME_CAPABILITIES, /* RFC 8551*/

	/* PKCS #9 */
	OID_TYPE_EMAIL_ADDRESS,
	OID_TYPE_UNSTRUCTURED_NAME,
	OID_TYPE_CHALLENGE_PASSWORD,

	/* RFC 6211 */
	OID_TYPE_CMS_ALGORITHM_PROTECTION,

	/* RFC 8018 */
	OID_TYPE_RC2_CBC,
	OID_TYPE_DES_EDE3_CBC,

	/* Apple Security */
	OID_TYPE_APPLE_SECURITY_86,

	/* 311 Microsoft */
	OID_TYPE_JURISDICTION_OF_INCORPORATION_LOCALITY_NAME,
	OID_TYPE_JURISDICTION_OF_INCORPORATION_STATE_OR_PROVINCE_NAME,
	OID_TYPE_JURISDICTION_OF_INCORPORATION_COUNTRY_NAME,

	OID_TYPE_SHA256_WITH_RSA_ENCRYPTION,
	OID_TYPE_EMBEDDED_SCTS,

	/* RFC 5280 (X.509 2008)*/
	OID_TYPE_AUTHORITY_INFO_ACCESS,
	OID_TYPE_CPS,
	OID_TYPE_UNOTICE,
	OID_TYPE_SERVER_AUTH,
	OID_TYPE_CLIENT_AUTH,
	OID_TYPE_OCSP,
	OID_TYPE_CA_ISSUERS,

	/* RFC 8018 */
	OID_TYPE_DES_CBC,

	/* X.520 */
	OID_TYPE_COMMON_NAME,
	OID_TYPE_SERIAL_NUMBER,
	OID_TYPE_COUNTRY_NAME,
	OID_TYPE_LOCALITY_NAME,
	OID_TYPE_STATE_OR_PROVINCE_NAME,
	OID_TYPE_ORGANIZATION_NAME,
	OID_TYPE_ORGANIZATIONAL_UNIT_NAME,
	OID_TYPE_BUSINESS_CATEGORY,
	OID_TYPE_ORGANIZATION_IDENTIFIER,

	/* X.509 RFC5280 */
	OID_TYPE_SUBJECT_DIRECTORY_ATTRIBUTES,
	OID_TYPE_SUBJECT_KEY_IDENTIFIER,
	OID_TYPE_KEY_USAGE,
	OID_TYPE_SUBJECT_ALT_NAME,
	OID_TYPE_BASIC_CONSTRAINTS,
	OID_TYPE_CRL_DISTRIBUTION_POINTS,
	OID_TYPE_CERTIFICATE_POLICIES,
	OID_TYPE_ANY_POLICY,
	OID_TYPE_AUTHORITY_KEY_IDENTIFIER,
	OID_TYPE_EXT_KEY_USAGE,

	/* RFC 3565 */
	OID_TYPE_AES128_CBC,
	OID_TYPE_AES192_CBC,
	OID_TYPE_AES256_CBC,

	/* RFC 8017 PKCS #1*/
	OID_TYPE_SHA256,

	/* Digicert (11412) */
	OID_TYPE_EV_SSL_CERTIFICATES,

	OID_TYPE_EV_GUIDELINES,
	OID_TYPE_DOMAIN_VALID,

	/* Add more OIDs as needed */
	OID_TYPE_UNKNOWN
};

void decode_asn1_oid(uint8_t asn1_oid_value[], uint8_t asn1_oid_len,
		     uint32_t oid_value[], uint32_t *oid_len);
int asn1_lookup_oid(uint32_t oid_value[], uint32_t oid_len);
void print_oid(uint32_t oid_value[], uint32_t oid_len);
void print_oid_desc(int oid_type);

#endif /* OID_H */